"use strict";(self.webpackChunkagr_documentation=self.webpackChunkagr_documentation||[]).push([[2436],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?i.createElement(g,a(a({ref:t},p),{},{components:n})):i.createElement(g,a({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},76966:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(87462),r=(n(67294),n(3905));const o={sidebar_position:1,title:"Introduction"},a=void 0,s={unversionedId:"getting-started/introduction",id:"version-5.3.2/getting-started/introduction",title:"Introduction",description:"AGR Plugin",source:"@site/versioned_docs/version-5.3.2/getting-started/introduction.mdx",sourceDirName:"getting-started",slug:"/getting-started/introduction",permalink:"/AGR-Documentation/docs/getting-started/introduction",draft:!1,editUrl:"https://github.com/3StudioOnline/AGR-Documentation/edit/master/versioned_docs/version-5.3.2/getting-started/introduction.mdx",tags:[],version:"5.3.2",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction"},sidebar:"tutorialSidebar",next:{title:"Installation",permalink:"/AGR-Documentation/docs/getting-started/installation"}},c={},l=[{value:"AGR Plugin",id:"agr-plugin",level:2},{value:"AGR Locomotion",id:"agr-locomotion",level:3},{value:"AGR Inventory",id:"agr-inventory",level:3},{value:"AGR Projectile",id:"agr-projectile",level:3},{value:"AGR Combat",id:"agr-combat",level:3},{value:"AGR Function Library",id:"agr-function-library",level:3}],p={toc:l};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"agr-plugin"},"AGR Plugin"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AGR V")," Plugin is a powerful and versatile suite of components and tools\ndesigned to streamline the development of complex gameplay mechanics in ",(0,r.kt)("em",{parentName:"p"},"Unreal\nEngine 5"),". Built on years of experience and community-driven feedback, ",(0,r.kt)("inlineCode",{parentName:"p"},"AGR V"),"\nintroduces advanced systems for locomotion, inventory management, projectile, and\ncombat mechanics, all with a focus on multiplayer performance and scalability.\nThis modular toolkit is ideal for developers looking to create large-scale\nmultiplayer experiences, offering seamless integration with ",(0,r.kt)("em",{parentName:"p"},"Unreal Engine\u2019s"),"\nexisting features and simplifying the creation of immersive, responsive gameplay."),(0,r.kt)("h3",{id:"agr-locomotion"},"AGR Locomotion"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AGR Locomotion")," drives character rotation and aim offset with extreme precision,\nensuring smooth, jitter-free animations, even in first-person perspectives.\nDesigned for multiplayer environments, it leverages ",(0,r.kt)("em",{parentName:"p"},"Unreal Engine 5's"),"\nthread-safe functionality and asynchronous proxy calls, minimizing multiplayer\nfootprint by using only replicated movement data. It supports both character and\npawn classes and integrates easily with any movement component."),(0,r.kt)("h3",{id:"agr-inventory"},"AGR Inventory"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AGR Inventory")," system combines inventory and equipment management into a single,\nefficient component. It features custom serialization and replication for\nseamless multiplayer performance, allowing for persistent item storage and\nautomatic inventory updates upon player reconnection.\nThe system includes event dispatchers for UI updates and item logic, making it\nhighly customizable and easy to integrate into any project."),(0,r.kt)("h3",{id:"agr-projectile"},"AGR Projectile"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AGR Projectile")," includes a projectile launcher and projectile components,\noffering a robust system for spawning and managing projectiles with custom\npenetration and bounce logic. It supports homing, physical material interaction,\nand physics sub-stepping, ensuring realistic and performant projectile behavior\nin multiplayer settings. The system is easy to set up, highly configurable, and\ndesigned with network optimization in mind."),(0,r.kt)("h3",{id:"agr-combat"},"AGR Combat"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"AGR Combat")," is a versatile system that comes with an easy to use combat\ncomponent and two tracer components which allow framerate-independent tracing.\nUse the socket tracer component to detect hits using socket-defined points and\ncustomizable trace shapes. For more advanced use-cases, use the arc tracer\ncomponent to detect hits by drawing a custom arc using its component\nconfigurations."),(0,r.kt)("h3",{id:"agr-function-library"},"AGR Function Library"),(0,r.kt)("p",null,"An ever-growing library of utility functions designed to streamline common game\ndevelopment tasks. Current features include functions for camera and cursor aim\ncalculations, component retrieval, angle calculations for hit reactions or\nricochets, and velocity-based rotation determination.\nThis library enhances development efficiency by providing ready-to-use solutions\nfor frequent challenges."))}m.isMDXComponent=!0}}]);