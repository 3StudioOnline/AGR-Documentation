"use strict";(self.webpackChunkagr_documentation=self.webpackChunkagr_documentation||[]).push([[3677],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>p});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),p=i,f=m["".concat(c,".").concat(p)]||m[p]||d[p]||a;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function p(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4887:(e,t,r)=>{r.d(t,{UE:()=>o,V3:()=>s,h8:()=>i,qh:()=>c,y$:()=>a});r(87462),r(67294);var n=r(3905);const i=e=>{let{children:t,text:r}=e;return(0,n.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},r)},a=e=>{let{children:t}=e;return(0,n.kt)("span",{style:{color:"#faa"}},t)};function o(e){let{children:t,version:r}=e;const i="#ffffff";return(0,n.kt)("span",{style:{backgroundColor:"#414141",color:i,border:"1px #ffffff solid",borderRadius:"5px",padding:".05rem .4rem",fontSize:".75rem"}},r)}function l(e,t,r,i){return(0,n.kt)("div",{style:{backgroundColor:i,color:r,border:"1px "+r+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const c=e=>{let{children:t}=e;return l(0,"Released","#afa","#181")},s=e=>{let{children:t}=e;return l(0,"Planned","#aff","#288")}},76503:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));r(4887);const a={sidebar_position:2,title:"Functions"},o=void 0,l={unversionedId:"combat-module/combat-component/functions",id:"version-5.3.1/combat-module/combat-component/functions",title:"Functions",description:"Register / Unregister",source:"@site/versioned_docs/version-5.3.1/combat-module/combat-component/functions.mdx",sourceDirName:"combat-module/combat-component",slug:"/combat-module/combat-component/functions",permalink:"/AGR-Documentation/docs/combat-module/combat-component/functions",draft:!1,editUrl:"https://github.com/3StudioOnline/AGR-Documentation/edit/master/versioned_docs/version-5.3.1/combat-module/combat-component/functions.mdx",tags:[],version:"5.3.1",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Functions"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/AGR-Documentation/docs/combat-module/combat-component/overview"},next:{title:"Overview",permalink:"/AGR-Documentation/docs/combat-module/socket-tracer-component/overview"}},c={},s=[{value:"Register / Unregister",id:"register--unregister",level:2},{value:"Start / End Tracing",id:"start--end-tracing",level:3},{value:"Utilities",id:"utilities",level:3}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"register--unregister"},"Register / Unregister"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Register Tracer Component")," : Registers a tracer component using a ",(0,i.kt)("inlineCode",{parentName:"li"},"Gameplay Tag"),". If the tag is already registered, the tracer will be updated."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Unregister Tracer By Component")," : Unregisters a tracer using a direct reference."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Unregister Tracer By Id")," : Unregisters a tracer by its ",(0,i.kt)("inlineCode",{parentName:"li"},"Gameplay Tag"),".")),(0,i.kt)("h3",{id:"start--end-tracing"},"Start / End Tracing"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Start Tracing By Id")," : Starts tracing on a registered tracer using its ",(0,i.kt)("inlineCode",{parentName:"li"},"Gameplay Tag"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"End Tracing By Id")," : Ends tracing on a registered tracer.")),(0,i.kt)("h3",{id:"utilities"},"Utilities"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Clear Tracers")," : Clears all registered tracers and notifies listeners via ",(0,i.kt)("inlineCode",{parentName:"li"},"OnTracerUpdated"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Build Ignore List")," : Returns a list of actors that should be ignored during trace (owner, instigator, attachments)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Get Ignore List")," : Retrieves the current list of ignored actors from the trace params."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Get Segment Count")," : Returns the current ",(0,i.kt)("inlineCode",{parentName:"li"},"Segment Count")," value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Get Trace Params")," : Returns the internal ",(0,i.kt)("inlineCode",{parentName:"li"},"Trace Params")," object.")))}d.isMDXComponent=!0}}]);