"use strict";(self.webpackChunkagr_documentation=self.webpackChunkagr_documentation||[]).push([[5215],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return r?n.createElement(h,o(o({ref:t},d),{},{components:r})):n.createElement(h,o({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4887:(e,t,r)=>{r.d(t,{UE:()=>o,V3:()=>s,h8:()=>a,qh:()=>c,y$:()=>i});r(87462),r(67294);var n=r(3905);const a=e=>{let{children:t,text:r}=e;return(0,n.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},r)},i=e=>{let{children:t}=e;return(0,n.kt)("span",{style:{color:"#faa"}},t)};function o(e){let{children:t,version:r}=e;const a="#ffffff";return(0,n.kt)("span",{style:{backgroundColor:"#414141",color:a,border:"1px #ffffff solid",borderRadius:"5px",padding:".05rem .4rem",fontSize:".75rem"}},r)}function l(e,t,r,a){return(0,n.kt)("div",{style:{backgroundColor:a,color:r,border:"1px "+r+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const c=e=>{let{children:t}=e;return l(0,"Released","#afa","#181")},s=e=>{let{children:t}=e;return l(0,"Planned","#aff","#288")}},12740:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var n=r(87462),a=(r(67294),r(3905)),i=r(4887);const o={sidebar_position:1,title:"Overview"},l=void 0,c={unversionedId:"combat-module/arc-tracer-component/overview",id:"version-5.3.1/combat-module/arc-tracer-component/overview",title:"Overview",description:"The AGR Arc Tracer Component detects hits by tracing a custom-shaped arc. It supports dynamic radius shaping via curve",source:"@site/versioned_docs/version-5.3.1/combat-module/arc-tracer-component/overview.mdx",sourceDirName:"combat-module/arc-tracer-component",slug:"/combat-module/arc-tracer-component/overview",permalink:"/AGR-Documentation/docs/combat-module/arc-tracer-component/overview",draft:!1,editUrl:"https://github.com/3StudioOnline/AGR-Documentation/edit/master/versioned_docs/version-5.3.1/combat-module/arc-tracer-component/overview.mdx",tags:[],version:"5.3.1",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Overview"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/AGR-Documentation/docs/combat-module/socket-tracer-component/overview"},next:{title:"Blueprint Function Library",permalink:"/AGR-Documentation/docs/combat-module/bpfl"}},s={},d=[{value:"Arc Tracer Settings",id:"arc-tracer-settings",level:2},{value:"Setup",id:"setup",level:3},{value:"Events",id:"events",level:2},{value:"On Trace Started",id:"on-trace-started",level:3},{value:"On Trace Ended",id:"on-trace-ended",level:3},{value:"On Hit",id:"on-hit",level:3},{value:"On Unique Hit",id:"on-unique-hit",level:3}],u={toc:d};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"AGR Arc Tracer Component")," detects hits by tracing a custom-shaped arc. It supports dynamic radius shaping via curve\nassets, segment control, and time-based tracing over multiple frames. This tracer is ideal for wide-sweeping attacks\nsuch as slashes, shockwaves, radial pulses, or any gameplay element that needs a non-linear hit shape."),(0,a.kt)("h2",{id:"arc-tracer-settings"},"Arc Tracer Settings"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Arc Tracer Settings",src:r(41734).Z,width:"411",height:"285"})),(0,a.kt)("h3",{id:"setup"},"Setup"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Trace Mode")," : Determines how trace points are used during the trace operation."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Trace Shape")," : Geometric shape used for tracing (e.g., line, sphere, capsule)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Trace Hit Mode")," : Whether to detect a single hit or multiple hits."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Arc Trace Duration")," : Duration (in seconds) to perform the trace over time. If set to ",(0,a.kt)("inlineCode",{parentName:"li"},"0"),", the trace will occur instantly in a single frame."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Arc Angle")," : Total angle (in degrees) of the arc (e.g., 90\xb0 for a quarter circle)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Arc Radius")," : Radius (distance) from the origin to the end of the arc."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Arc Radius Modifier")," : A curve asset used to dynamically scale the radius per segment. The curve is sampled using segment index. Values below 1.0 are clamped."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Override Segment Count")," : If true, uses a custom segment count instead of the default from the combat component."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Override Trace Params")," : If true, allows customizing trace parameters instead of using the default from the combat component.")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"You can create complex arc shapes by customizing the ",(0,a.kt)("inlineCode",{parentName:"p"},"Arc Radius Modifier")," curve.")),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("h3",{id:"on-trace-started"},"On Trace Started"),(0,a.kt)("p",null,"Triggered when tracing begins."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"On Trace Started",src:r(10492).Z,width:"350",height:"168"})),(0,a.kt)("h3",{id:"on-trace-ended"},"On Trace Ended"),(0,a.kt)("p",null,"Triggered when tracing ends."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Trace Hit Result")," ",(0,a.kt)(i.h8,{text:"1",mdxType:"Step"})," : A wrapper containing all actors and their associated hit results.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"On Trace Ended",src:r(50525).Z,width:"336",height:"196"})),(0,a.kt)("h3",{id:"on-hit"},"On Hit"),(0,a.kt)("p",null,"Triggered for every actor hit during tracing."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Hit Result")," ",(0,a.kt)(i.h8,{text:"1",mdxType:"Step"})," : Details about the collision.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"On Hit",src:r(90766).Z,width:"294",height:"196"})),(0,a.kt)("h3",{id:"on-unique-hit"},"On Unique Hit"),(0,a.kt)("p",null,"Triggered only for unique actor hits per trace cycle."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Hit Result")," ",(0,a.kt)(i.h8,{text:"1",mdxType:"Step"})," : Details about the unique hit.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"On Unique Hit",src:r(23774).Z,width:"336",height:"196"})),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"A unique hit means the same actor is only counted once during a trace cycle.")))}p.isMDXComponent=!0},41734:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/class-settings-80fed016872bb0661dd852e2a31e77bd.png"},90766:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/on-hit-d63df80a530f12d2b19bc60e2ab93271.png"},50525:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/on-trace-ended-9e3a21a9c9316d5bbfb8a6f2236b7796.png"},10492:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/on-trace-started-a6d9c70cbb5985081b94325d1d40677d.png"},23774:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/on-unique-hit-1123dc3f618c6a6b36a57936d8b1cbc8.png"}}]);